
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "InfRLMult"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('InfRLMult')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("anov")
> ### * anov
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: anov
> ### Title: Tabla anova de la regresión
> ### Aliases: anov
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> alpha<-0.05
> anov(x,y,alpha)
$ANOVA
  Fuente  S.C G.L               C.M             Fexp             pvalor
1     VE 26.5   2  13.2499999999993 17.6666666666486 0.0535714285714803
2    VNE  1.5   2 0.750000000000725                                    
3     VT 28.0   4                                                      

$`Coeficiente de determinación`
          [,1]
[1,] 0.9464286

$`Contraste de regresión`
[1] "No se rechaza la hipótesis nula, por lo tanto el coeficiente de determinación es 0"

> 
> 
> 
> cleanEx()
> nameEx("contraste")
> ### * contraste
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: contraste
> ### Title: Contrastes de hipótesis sobre los parámetros del modelo
> ### Aliases: contraste
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> alpha<-0.05
> R<-matrix(c(1,0,0,1,0,-2),ncol=3)
> r<-c(3,0)
> 
> contraste(x,y,alpha,R,r)
[1] "No se rechaza la hipótesis nula"
          Beta
[1,] 3.0000000
[2,] 0.2852897
[3,] 0.1426449
> 
> 
> 
> cleanEx()
> nameEx("estimacion")
> ### * estimacion
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: estimacion
> ### Title: Estimación de los parámetros del modelo
> ### Aliases: estimacion
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> estimacion(x,y)
$Beta
     [,1]
[1,]  4.0
[2,]  2.5
[3,] -1.5

$Varianza
     [,1]
[1,] 0.75

> 
> 
> 
> cleanEx()
> nameEx("intervalo")
> ### * intervalo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: intervalo
> ### Title: Intervalos de confianza para los parámetros del modelo
> ### Aliases: intervalo
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> alpha<-0.05
> 
> intervalo(x,y,alpha)
$`Intervalo de los Beta`
       Inferior  Superior
[1,] -15.254070 23.254070
[2,]  -1.226207  6.226207
[3,]  -7.391650  4.391650

$`Intervalo de la varianza de los errores`
      Inferior Superior
[1,] 0.2033138 29.62342

> 
> 
> 
> 
> cleanEx()
> nameEx("nulidad")
> ### * nulidad
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Nulidad
> ### Title: Contraste de nulidad y sobre un subvector
> ### Aliases: Nulidad
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> alpha<-0.05
> i<-1
> j<-2
> beta0<-c(1,-2)
> nulidad(x,y,i,j,alpha,beta0)
$`Contraste de Nulidad`
[1] "No se rechaza la hipótesis nula"

$`Contraste de un subvector`
[1] "Se rechaza la hipótesis nula"

> 
> 
> 
> cleanEx()
> nameEx("prediccion")
> ### * prediccion
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Prediccion
> ### Title: Predecir la variable dependiente y su media
> ### Aliases: Prediccion
> ### Keywords: classes list methods print
> 
> ### ** Examples
> 
> x<-matrix(c(3,1,5,2,4,5,4,6,4,6),ncol=2)
> y<-c(3,1,8,3,5)
> x0<-c(1,4.75,5.25)
> alpha<-0.05
> 
> prediccion(x,y,x0,alpha)
$Predicción
     [,1]
[1,]    8

$`Intervalo de la predicción de la media de la variable respuesta`
         [,1]     [,2]
[1,] 2.592184 13.40782

$`Intervalo de la predicción de la variable respuesta`
         [,1]     [,2]
[1,] 1.432726 14.56727

> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.24 0.02 0.25 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
